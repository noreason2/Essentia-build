ALGOIGNORE = ['GaiaTransform']
AR = '/usr/bin/ar'
ARFLAGS = 'rcs'
BINDIR = '/usr/local/bin'
CC = ['/usr/bin/gcc']
CCLNK_SRC_F = []
CCLNK_TGT_F = ['-o']
CC_NAME = 'gcc'
CC_SRC_F = []
CC_TGT_F = ['-c', '-o']
CC_VERSION = ('4', '8', '4')
CFLAGS_MACBUNDLE = ['-fPIC']
CFLAGS_cshlib = ['-fPIC']
COMPILER_CC = 'gcc'
COMPILER_CXX = 'g++'
CPPPATH_ST = '-I%s'
CXX = ['/usr/bin/g++']
CXXFLAGS = ['-pipe', '-Wall', '-msse', '-msse2', '-mfpmath=sse', '-O2', '-fPIC']
CXXFLAGS_MACBUNDLE = ['-fPIC']
CXXFLAGS_cxxshlib = ['-fPIC']
CXXLNK_SRC_F = []
CXXLNK_TGT_F = ['-o']
CXX_NAME = 'gcc'
CXX_SRC_F = []
CXX_TGT_F = ['-c', '-o']
DEFINES = ['HAVE_AVCODEC=1', 'HAVE_AVFORMAT=1', 'HAVE_AVUTIL=1', 'HAVE_FFTW=1', 'HAVE_SAMPLERATE=1', 'HAVE_TAGLIB=1', '__STDC_CONSTANT_MACROS', 'HAVE_YAML=1']
DEFINES_ST = '-D%s'
DEST_BINFMT = 'elf'
DEST_CPU = 'x86'
DEST_OS = 'linux'
EXAMPLES = False
EXAMPLE_LIST = []
GIT_SHA = 'Undefined'
INCLUDES_TAGLIB = ['/usr/include/taglib']
LIBDIR = '/usr/local/lib'
LIBPATH_ST = '-L%s'
LIB_AVCODEC = ['avcodec']
LIB_AVFORMAT = ['avformat']
LIB_AVUTIL = ['avutil']
LIB_FFTW = ['fftw3f']
LIB_SAMPLERATE = ['samplerate']
LIB_ST = '-l%s'
LIB_TAGLIB = ['tag']
LIB_YAML = ['yaml']
LINKFLAGS_MACBUNDLE = ['-bundle', '-undefined', 'dynamic_lookup']
LINKFLAGS_cshlib = ['-shared']
LINKFLAGS_cstlib = ['-Wl,-Bstatic']
LINKFLAGS_cxxshlib = ['-shared']
LINKFLAGS_cxxstlib = ['-Wl,-Bstatic']
LINK_CC = ['/usr/bin/gcc']
LINK_CXX = ['/usr/bin/g++']
PKGCONFIG = '/usr/bin/pkg-config'
PREFIX = '/usr/local'
RPATH_ST = '-Wl,-rpath,%s'
SHLIB_MARKER = '-Wl,-Bdynamic'
SONAME_ST = '-Wl,-h,%s'
STLIBPATH_ST = '-L%s'
STLIB_MARKER = '-Wl,-Bstatic'
STLIB_ST = '-l%s'
USES = 'FFTW YAML AVFORMAT AVCODEC AVUTIL SAMPLERATE TAGLIB'
VERSION = '2.1-beta2'
WITH_CPPTESTS = False
WITH_EXAMPLES = False
WITH_GAIA = False
WITH_PYTHON = False
WITH_STATIC_EXAMPLES = False
WITH_VAMP = False
cprogram_PATTERN = '%s'
cshlib_PATTERN = 'lib%s.so'
cstlib_PATTERN = 'lib%s.a'
cxxprogram_PATTERN = '%s'
cxxshlib_PATTERN = 'lib%s.so'
cxxstlib_PATTERN = 'lib%s.a'
define_key = ['HAVE_AVCODEC', 'HAVE_AVFORMAT', 'HAVE_AVUTIL', 'HAVE_FFTW', 'HAVE_SAMPLERATE', 'HAVE_TAGLIB', 'HAVE_YAML']
macbundle_PATTERN = '%s.bundle'
pcfile = 'prefix=/usr/local\nlibdir=${prefix}/lib\nincludedir=${prefix}/include\n\nName: libessentia\nDescription: audio analysis library -- development files\nVersion: 2.1-beta2\nLibs: -L${libdir} -lfftw3 -lyaml -lavcodec -lavformat -lavutil -lsamplerate -ltag -lfftw3f -lgaia2\nCflags: -I${includedir}/essentia I${includedir}/essentia/scheduler I${includedir}/essentia/streaming I${includedir}/essentia/utils\n'
